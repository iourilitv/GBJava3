package lesson4.classbook;

/**
 * GBJava3
 * Java Core. Professional level. 19.08.2019 Webinar. Teacher: Anton Batiaev
 * Урок 4. Многопоточность. Часть I.
 * Методичка.
 * Использование синхронизированных методов.
 * - Синхронизированный метод создается путем указания ключевого слова synchronized в его
 * объявлении. Как только синхронизированный метод любого объекта получает управление, объект
 * блокируется, и ни один синхронизированный метод этого объекта не может быть вызван другим
 * потоком.
 * - Потоки, которым требуется синхронизированный метод, используемый другим потоком, ожидают до
 * тех пор, пока не будет разблокирован объект, для которого он вызывается. Когда
 * синхронизированный метод завершается, объект, для которого он вызывался, разблокировался.
 * Пример 3.
 * Способ синхронизации, в роли монитора может выступать сам класс.
 * При указании ключевого слова synchronized в объявлении статического метода в роли монитора
 * выступает сам класс.
 */
public class Example_SB_3 {
    public static void main(String[] args) {
        System. out .println( "Start" );
        new Thread(() -> method ()).start();
        new Thread(() -> method ()).start();
    }

    public synchronized static void method() {
        for ( int i = 0 ; i < 10 ; i++) {
            System. out .println(i);
            try {
                Thread. sleep ( 100 );
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}